import navesEspaciales.*
import navesbaliza.*
import navesDePasajeros.*
import navesDeCombate.*


describe "naves"{
	
	const np1=new NavesDePasajeros(200)
	const nc1=new NavesDeCombate(10000)
	const nb1=new NavesBaliza("naranja")
	
  fixture {
	
	np1.cargarComida(5000)
	np1.cargarBebida(5000)
	np1.acelerar(12000)
	
}
test "nave baliza incial"{
	
	nb1.cambiarColorDeBaliza("rojo")
	assert.equals("rojo",nb1._baliza())  
}

test "nave combate inicial"{
	
	nc1.desplegarMisiles()
	nc1.emitirMensaje("Alerta")
	nc1.emitirMensaje("Stop")
	
	
	assert.that(nc1.misilesDesplegados())
	assert.equals(["Alerta","Stop"],nc1.mensajesEmitidos())
	assert.equals("Alerta",nc1.primerMensajeEmitido())
	assert.equals("Stop",nc1.ultimoMensajeEmitido())

}

test "nave de pasajeros"{
	assert.equals(200, np1.pasajeros())
	
}

test "preparar nave combate"{
  nc1.prepararViaje()
  nc1.cargarCombustible(10000)
  // revisar
  assert.equals(40000, nc1.combustible())
  nc1.acelerar(20000)
  assert.equals(40000, nc1.velocidad())
  assert.equals(["Saliendo en mision"], nc1.mensajesEmitidos())
}

test "preparar nave pasajeros"{
	
  np1.prepararViaje()
  np1.cargarCombustible(10000)
  assert.equals(40000, np1.combustible())
   // assert.equals(5800, np1.raciones())
   
}

test "recibir amenaza baliza"{
	
	nb1.recibirAmenaza()
	assert.equals(10,nb1.direccion())
	assert.equals("rojo", nb1._baliza())
	
}

test "recibir amenaza pasajeros"{
	np1.recibirAmenaza()
	assert.equals(12000, np1.velocidad())
	assert.equals(4800, np1.racionComida())
	assert.equals(4600, np1.racionBebida())
}
	
	test "amenaza combare"{
		nc1.recibirAmenaza()
		assert.equals(20, nc1.direccion())
		assert.equals(["Amenaza recibida"], nc1.mensajesEmitidos())
	}
	
	
	
	}
	
	
